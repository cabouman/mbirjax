To get multiple gpus (note that -n should be a multiple of 14, and larger multiples give more cpu memory):

    sinteractive -A bouman -N1 -n42 --gpus-per-node=8 -q normal -p ai -t 04:00:00

To get an updated cudnn, needed in rcac for multiple gpus as of August 2025:
The script below installs cudnn on data depot.  The library can then be accessed and activated by:
    module use /depot/bouman/apps/modules
    module load cudnn/9.11.0


#!/bin/bash

# Exit on error
set -e

# Base and full versioning
CUDNN_VERSION="9.11.0"
CUDNN_FULL_VERSION="9.11.0.98"
CUDA_VERSION="cuda12"

# Define paths
INSTALL_DIR="/depot/bouman/apps/cudnn/${CUDNN_VERSION}"
MODULE_DIR="/depot/bouman/apps/modules/cudnn"
MODULEFILE="${MODULE_DIR}/${CUDNN_VERSION}"

# Construct download URL from components
ARCHIVE_NAME="cudnn-linux-x86_64-${CUDNN_FULL_VERSION}_${CUDA_VERSION}-archive.tar.xz"
CUDNN_URL="https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/linux-x86_64/${ARCHIVE_NAME}"
ARCHIVE_NAME=$(basename "$CUDNN_URL")

echo "=== Cleaning previous installation in $INSTALL_DIR"
rm -rf "$INSTALL_DIR"
mkdir -p "$INSTALL_DIR"
cd "$INSTALL_DIR"

echo "=== Downloading cuDNN ${CUDNN_VERSION}"
wget "$CUDNN_URL"

echo "=== Extracting archive"
tar -xf "$ARCHIVE_NAME"

echo "=== Organizing files"
mv cudnn-linux-x86_64-9.11.0.98_cuda12-archive/include include
mv cudnn-linux-x86_64-9.11.0.98_cuda12-archive/lib lib
rm -rf cudnn-linux-x86_64-9.11.0.98_cuda12-archive*
rm -f "$ARCHIVE_NAME"

echo "=== Creating modulefile directory at $MODULE_DIR"
mkdir -p "$MODULE_DIR"

echo "=== Writing modulefile to $MODULEFILE"
cat << EOF > "$MODULEFILE"
#%Module1.0
proc ModulesHelp { } {
    puts stderr "cuDNN ${CUDNN_VERSION} (local install)"
}
module-whatis "cuDNN ${CUDNN_VERSION} for CUDA 12.0 (user local)"

set root ${INSTALL_DIR}
prepend-path LD_LIBRARY_PATH \$root/lib
prepend-path CPATH          \$root/include
EOF

echo -e "\n=== âœ… Done!"

echo -e "\nTo make the module available run"
echo "    module use /depot/bouman/apps/modules"
echo -e "\nTo load cuDNN 9.11.0, use:\n    module load cudnn/9.11.0"